#!/usr/bin/env bash

set -e
exec > >(tee -a /var/log/vault_setup.log) 2>&1

logger() {
  echo "$(date '+%Y/%m/%d %H:%M:%S') vault.sh: $1"
}

while fuser /var/lib/apt/lists/lock >/dev/null 2>&1 ; do
  logger "Waiting for apt lock"
  sleep 1
done

while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1 ; do
  logger "Waiting for dpkg lock"
  sleep 1
done

logger "Installing Vault server"
wget -O - https://apt.releases.hashicorp.com/gpg | gpg --yes --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
apt update

apt install -y vault

logger "Create Vault directories"
mkdir -p ${VAULT_CONFIG}
mkdir -p ${VAULT_DATA}
mkdir -p ${VAULT_DATA}/raft/data

logger "Populating server certificates"
mv ${RESOURCE_ROOT}/ssl ${VAULT_CONFIG}/

logger "Create configuration files"
cat <<-EOF | tee ${VAULT_CONFIG}/vault.hcl
ui            = true
cluster_addr  = "https://127.0.0.1:8201"
api_addr      = "https://127.0.0.1:8200"
disable_mlock = true
log_level     = "info"

storage "raft" {
  path    = "${VAULT_DATA}/raft/data"
  node_id = "ip-${replace(NODE_ID, ".", "-")}"
}

listener "tcp" {
  address       = "0.0.0.0:8200"
  tls_cert_file = "${VAULT_CONFIG}/ssl/full-chain.pem"
  tls_key_file  = "${VAULT_CONFIG}/ssl/private-key.pem"
}
EOF

cat <<-EOF | tee /lib/systemd/system/vault.service
[Unit]
Description="HashiCorp Vault"
Documentation="https://developer.hashicorp.com/vault/docs"
ConditionFileNotEmpty=${VAULT_CONFIG}/vault.hcl

[Service]
#Environment=VAULT_ENABLE_FILE_PERMISSIONS_CHECK="true"
User=vault
Group=vault
SecureBits=keep-caps
AmbientCapabilities=CAP_IPC_LOCK
CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
NoNewPrivileges=yes
ExecStart=/usr/bin/vault server -config=${VAULT_CONFIG}/vault.hcl
ExecReload=/bin/kill --signal HUP
KillMode=process
KillSignal=SIGINT

[Install]
WantedBy=multi-user.target
EOF

logger "Changing file ownership"
chown -R vault:vault "${VAULT_CONFIG}"
chown -R vault:vault "${VAULT_DATA}"
chmod 644 /lib/systemd/system/vault.service

logger "Enable Vault server"
systemctl daemon-reload
systemctl enable vault.service
systemctl start vault.service

logger "Script Completed"